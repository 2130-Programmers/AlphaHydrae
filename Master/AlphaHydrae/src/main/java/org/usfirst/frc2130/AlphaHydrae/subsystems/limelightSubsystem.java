// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2130.AlphaHydrae.subsystems;


import org.usfirst.frc2130.AlphaHydrae.Robot;

import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.networktables.NetworkTable;
import edu.wpi.first.networktables.NetworkTableEntry;
import edu.wpi.first.networktables.NetworkTableInstance;

/**
 *
 */
public class limelightSubsystem extends Subsystem {

    public double limelightX;
    public double limelightY;
    public double limelightArea;
    public boolean pipelineBoolean = false;
    public int i;
    public int currentPipeline;

    private NetworkTable table;
    private NetworkTableEntry camMode;
    private boolean previousCamMode;
    private boolean newCamMode;
    private double camModeNumber;

    public limelightSubsystem() {
        table = NetworkTableInstance.getDefault().getTable("limelight");
        camMode = table.getEntry("camMode");

        previousCamMode = false;
    }

    @Override
    public void initDefaultCommand() {

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());

        //setDefaultCommand(new changePipelineCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

        camModeNumber = camMode.getDouble(5.0);
    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands. 

    public double returnCamMode() {
        return camModeNumber;
    }

    public void setCamMode(boolean visionProcessingMode) {
        if (visionProcessingMode) {
            camMode.setNumber(0);
        } else {
            camMode.setNumber(1);
        }
    }

}

